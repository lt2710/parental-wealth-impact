"Non-agricultural outside system job (base: agricultural)" =
"jobcatnAGout",
"Non-agricultural within system job (base: agricultural)" =
"jobcatnAGin",
"Parental wealth total" =
"(net_worth_real + 1) %>% log()",
"No home"="home",
"Parental asset: home (logged)" =
"(homevalue + 1) %>% log()",
"No fin"="fin",
"Parental asset: fin (logged)" =
"(asset_fin + 1) %>% log()",
"Parental asset: durable and fixed (logged)" =
"(asset_durable_fixed + 1) %>% log()",
"No land"="land",
"Parental asset: land (logged)" =
"(asset_land + 1) %>% log()"
),
to.file = "Word",
file.name = "output/education_child_by_city_tier.docx"
)
lm_edu0%>%summary()
lm(
(homevalue_child + 1)%>%log() ~
#children
tier_child +
age_child +
gender_child +
onlychild +
marriage_child +
#education_years_child +
#hukou_child +
#party_child +
#mgt +
#(income_child+50)%>%log() +
#father
education_years +
jobcat +rank+
hukou+
party
#(net_worth_real + 1) %>% log()
,
data = dta_lm_child %>% filter(homevalue_child > 0)
)%>%summary()
lm(
(homevalue_child + 1)%>%log() ~
#children
tier_child +
age_child +
gender_child +
onlychild +
marriage_child +
#education_years_child +
#hukou_child +
#party_child +
#mgt +
#(income_child+50)%>%log() +
#father
education_years +
job +rank+
hukou+
party
#(net_worth_real + 1) %>% log()
,
data = dta_lm_child %>% filter(homevalue_child > 0)
)%>%summary()
lm(
(homevalue_child + 1)%>%log() ~
#children
tier_child +
age_child +
gender_child +
onlychild +
marriage_child +
education_years_child +
hukou_child +
party_child +
mgt +
(income_child+50)%>%log() +
#father
education_years +
job +rank+
hukou+
party
#(net_worth_real + 1) %>% log()
,
data = dta_lm_child %>% filter(homevalue_child > 0)
)%>%summary()
lm(
(homevalue + 1)%>%log() ~
#father
education_years +
job +rank+
hukou+
party
#(net_worth_real + 1) %>% log()
,
data = dta_lm_child %>% filter(homevalue_child > 0)
)%>%summary()
#Set up default knitr chunk options
library("knitr")
knitr::opts_chunk$set(
echo = FALSE,
eval = TRUE,
message = FALSE,
warning = FALSE,
fig.height = 9,
fig.width = 15,
fig.align = "center",
cache = TRUE,
cache.lazy = FALSE
)
options(htmltools.dir.version = FALSE)
#set up theme map
theme_simplemap <- function(base_size = 9,
base_family = "") {
theme_bw(base_size = base_size, base_family = base_family) %+replace%
theme(
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
panel.spacing = unit(0, "lines"),
plot.background = element_blank(),
legend.position = "none"
)
}
# Load packages.
packages <- c(
"tidyr",
"dplyr",
"stringr",
"purrr",
"readstata13",
"data.table",
"knitr",
"ggplot2",
"bit64",
"forcats",
"tidyverse",
"ordinal",
"jtools",
"quantreg",
"TraMineR",
"MASS"
)
packages <- lapply(
packages,
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x)
library(x, character.only = TRUE)
}
}
)
setwd("C:/Users/Administrator/Documents/GitHub/parental-wealth-impact")
Sys.setlocale("LC_TIME", "C")#Set to debug date transformation
Sys.setenv(TZ="Europe/Berlin")
select <- dplyr::select
#Build summary function
summary.var <- function(dta,
var,
title = NULL) {
m <- ggplot(data = dta,
aes(x = dta[[var]])) +
ggtitle(title) +
xlab(var) +
ylab("num of ppl") +
theme_classic()
if (dta[[var]] %>% class == "numeric" |
dta[[var]] %>% class == "integer") {
m <- m + geom_histogram(binwidth = 5,
fill = "lightgreen") +
labs(caption = "numeric") +
theme(text = element_text(size = 20))
}
if (dta[[var]] %>% class == "character" |
dta[[var]] %>% class == "factor" |
dta[[var]] %>% class == "logical") {
m <- m + geom_bar(fill = "lightskyblue") +
labs(caption = "categorical") +
theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
theme(text = element_text(size = 20))
}
return(m)
}
demographic_raw_2015 <-
read.dta13("CHARLS2015/Demographic_Background.dta")
demographic_2015 <- demographic_raw_2015 %>% select(
id = ID,
hhid = householdID,
communityID,
role = ba000_w2_3,
birthyear = ba004_w3_1,
address0 = bb000_w3_2,
otheraddress = bb001_w3,
address1 = bb001_w3_2
)
#age at 2015
demographic_2015 <- demographic_2015 %>% mutate(id = id %>% as.character,
age = 2015 - birthyear)
#Format transformation
for (var in c("address0",
"otheraddress",
"address1")) {
demographic_2015[[var]] <- demographic_2015[[var]] %>% as.character()
demographic_2015[[var]][is.na(demographic_2015[[var]]) == TRUE] <-
"unknown"
}
#Update those who changed address since last survey
demographic_2015$address <- NA
for (i in 1:nrow(demographic_2015)) {
if (demographic_2015$otheraddress[i] == 1) {
demographic_2015$address[i] <- demographic_2015$address0[i]
}
if (demographic_2015$otheraddress[i] == 2) {
demographic_2015$address[i] <- demographic_2015$address1[i]
}
}
demographic_raw_2014 <-
read.dta13("CHARLS2014/Demographic_Background.dta")
residence_2014 <-
read.dta13("CHARLS2014/Residence.dta") %>% select(id = ID,
birthyear = rbirthyear)
#generate hukou sequence
hukou_2014 <- demographic_raw_2014 %>% select(
id = ID,
hhid = householdID,
role = rgender,
hukoutype,
hk002_1_1_:hk002_1_6_,
#change year
hk004_1_:hk004_6_#new type
) %>% left_join(residence_2014, by = "id")
hukou_2014 <- hukou_2014 %>% mutate(id = id %>% as.character())
hukou_2014 <- hukou_2014 %>% filter(is.na(birthyear) == FALSE &
is.na(hukoutype) == FALSE)
hukou_2014 <- hukou_2014 %>% select(
id,
hhid,
birthyear,
hukoutype,
hk002_1_1_,
hk004_1_,
hk002_1_2_,
hk004_2_,
hk002_1_3_,
hk004_3_,
hk002_1_4_,
hk004_4_,
hk002_1_5_,
hk004_5_,
hk002_1_6_,
hk004_6_
)
hukou_raw <- NULL
for (i in 1:nrow(hukou_2014)) {
seq_raw <- cbind(
c(
hukou_2014$birthyear[i],
hukou_2014$hk002_1_1_[i],
hukou_2014$hk002_1_2_[i],
hukou_2014$hk002_1_3_[i],
hukou_2014$hk002_1_4_[i],
hukou_2014$hk002_1_5_[i],
hukou_2014$hk002_1_6_[i],
2015
),
c(
hukou_2014$hukoutype[i],
hukou_2014$hk004_1_[i],
hukou_2014$hk004_2_[i],
hukou_2014$hk004_3_[i],
hukou_2014$hk004_4_[i],
hukou_2014$hk004_5_[i],
hukou_2014$hk004_6_[i],
"aha"
)
) %>% as.data.frame() %>% na.omit()
a <- seq_raw %>% mutate(length = NA,
V1 = V1 %>% as.character() %>% as.numeric())
for (j in 1:(nrow(a) - 1)) {
if (a$V1[j] < a$V1[j + 1]) {
a$length[j] <-
seq(a$V1[j], a$V1[j + 1], 1) %>% intersect(seq(1988, 1998, 1)) %>% length()
} else {
a$length[j] <- 0
}
}
a <- a[-nrow(a),]
a <- a[order(a$length, decreasing = TRUE),]
record <- c(hukou_2014$id[i]%>% as.character(),
a$V2[1] %>% as.character())
hukou_raw <- rbind(hukou_raw, record)
}
hukou_2014 <- hukou_raw %>% as.data.frame() %>% transmute(id = V1 %>% as.character(),
hukou = V2 %>% as.character())
hukou_2014$hukou[hukou_2014$hukou %in% c("2", "3", "4")] <-
"1 urban hukou"
hukou_2014$hukou[hukou_2014$hukou == "1"] <- "0 rural hukou"
save(hukou_2014, file = "output/hukou_2014.RData")
load("output/hukou_2014.RData")
#Select variable
party_2014 <- demographic_raw_2014 %>% select(id = ID,
p022s1)
party_2014 <- party_2014 %>% mutate(id = id %>% as.character(),
p022s1 = p022s1 %>% as.character)
party_2014$party <- 0
party_2014$party[party_2014$p022s1 == "1 The Respondent"] <- 1
party_2014$party <- party_2014$party %>% factor(levels = c(0, 1),
labels = c("Not party member",
"Party member"))
party_2014 <- party_2014 %>% select(id,
party)
education_raw_2014 <- read.dta13("CHARLS2014/Education_History.dta")
education_2014 <- education_raw_2014 %>% select(id = ID,
e000s1:e000s12)
#Transform variables
for (i in names(education_2014)) {
education_2014[[i]] <- education_2014[[i]] %>% as.character()
education_2014[[i]][is.na(education_2014[[i]]) == TRUE] <-
"missing"
}
#Recode education
education_2014$education <- education_2014$first_hukou
for (i in 1:nrow(education_2014)) {
for (j in c(
"e000s1",
"e000s2",
"e000s3",
"e000s4",
"e000s5",
"e000s6",
"e000s7",
"e000s8",
"e000s9",
"e000s10",
"e000s11",
"e000s12"
)) {
if (education_2014[[j]][i] != "missing") {
education_2014$education[i] <- education_2014[[j]][i]
}
}
}
education_2014$education[education_2014$education == "missing"] <- NA
education_2014$education_years <- NA
education_2014$education_years[education_2014$education == "1 Home School" |
education_2014$education == "2 Kindergarten" |
education_2014$education == "3 Preschool"] <-
1
education_2014$education_years[education_2014$education == "12 None"] <-
1
education_2014$education_years[education_2014$education == "4 Primary School"] <-
6
education_2014$education_years[education_2014$education == "5 Middle School"] <-
9
education_2014$education_years[education_2014$education == "6 High School"] <-
12
education_2014$education_years[education_2014$education == "7 Vocational School"] <-
11
education_2014$education_years[education_2014$education == "8 Three-year College"] <-
15
education_2014$education_years[education_2014$education == "9 Four-year College"] <-
16
education_2014$education_years[education_2014$education == "10 Master"] <-
19
education_2014$education_years[education_2014$education == "11"] <- 22
education_2014$education[education_2014$education == "1 Home School" |
education_2014$education == "2 Kindergarten" |
education_2014$education == "3 Preschool" |
education_2014$education == "4 Primary School" |
education_2014$education == "12 None"] <- 1
education_2014$education[education_2014$education == "5 Middle School" |
education_2014$education == "6 High School"] <-
2
education_2014$education[education_2014$education == "7 Vocational School" |
education_2014$education == "8 Three-year College"] <-
3
education_2014$education[education_2014$education == "9 Four-year College" |
education_2014$education == "10 Master" |
education_2014$education == "11"] <- 4
education_2014$education <-
education_2014$education %>% factor(
levels = c(1:4),
labels = c(
"1 Below middle school",
"2 Middle and High school",
"3 Voc/3 yrs college",
"4 Bachelor and above"
)
)
education_2014 <- education_2014 %>% select(id,
education,
education_years)
work_raw_2014 <- read.dta13("CHARLS2014/Work_History.dta")
work_2014 <- work_raw_2014 %>% select(
id = ID,
hhid = householdID,
f_2_1_0_:f_2_1_18_,
#Start year for job 1-18
f_2_5_0_:f_2_5_18_,
#End year
f_3_0_:f_3_18_,
#Job category
f104_0_:f104_18_,
#Job category detailed
f105_0_:f105_14_,
#detail firm
f110_0_:f110_15_,
#rank at start
f110_a_1_:f110_a_8_,
#rank at middle
f124_0_:f124_15_
#rank at end
) %>% left_join(demographic_raw_2014 %>% select(id =
ID,
role =
rgender),
by = "id") %>% filter(role ==
"1 Male")
work_2014 <- work_2014 %>% mutate(id = id %>% as.character())
work <- NULL
for (i in 1:nrow(work_2014)) {
seq_full <- NULL
for (j in 0:18) {
start <- paste("f_2_1_", j, "_", sep = "")
end <- paste("f_2_5_", j, "_", sep = "")
cat1 <- paste("f_3_", j, "_", sep = "")
cat2 <- paste("f104_", j, "_", sep = "")
cat3 <- paste("f105_", j, "_", sep = "")
cat4 <- paste("f110_", j, "_", sep = "")
cat5 <- paste("f110_a_", j, "_", sep = "")
cat6 <- paste("f124_", j, "_", sep = "")
job <- NA
role <- NA
start_year <- work_2014[[start]][i]
if (is.na(start_year) == FALSE &
is.na(work_2014[[cat1]][i]) == FALSE) {
if (is.na(work_2014[[end]][i]) == FALSE) {
end_year <- work_2014[[end]][i]
} else{
end_year <- 2014
}
duration <- end_year - start_year
if (is.na(duration) == FALSE & duration < 0) {
b<-end_year
a<-start_year
start_year<-b
end_year<-a
print(c(
work_2014$id[i],
"switch start/end year due to data mistake"
))
}
job <- work_2014[[cat1]][i] %>% as.character()
if (job %in% c("2 Agricultural Employment",
"3 Non-agricultural Employment")) {
if (is.null(work_2014[[cat2]][i]) == FALSE) {
if (is.na(work_2014[[cat2]][i]) == FALSE) {
job <- work_2014[[cat2]][i] %>% as.character()
}
}
if (is.null(work_2014[[cat4]][i]) == FALSE) {
if (is.na(work_2014[[cat4]][i]) == FALSE) {
role <- work_2014[[cat4]][i] %>% as.character()
}
}
if (is.null(work_2014[[cat5]][i]) == FALSE) {
if (is.na(work_2014[[cat5]][i]) == FALSE) {
role <- work_2014[[cat5]][i] %>% as.character()
}
}
if (is.null(work_2014[[cat6]][i]) == FALSE) {
if (is.na(work_2014[[cat6]][i]) == FALSE) {
role <- work_2014[[cat6]][i] %>% as.character()
}
}
}
#role<- work_2014[[cat4]][i] %>% as.character()
if (job %in% c("4 Firm")) {
job <- work_2014[[cat3]][i] %>% as.character()
}
if (is_empty(start_year) == TRUE) {
start_year <- "yo"
}
if (is_empty(end_year) == TRUE) {
end_year <- "yo"
}
if (is_empty(job) == TRUE) {
job <- "yo"
}
if (is_empty(role) == TRUE) {
role <- "yo"
}
overlap<-seq(start_year,end_year,1)%>%intersect(seq(1988,1998,1))%>%length()
record <- c(work_2014$id[i],
work_2014$hhid[i],
job,
role,
start_year,
end_year,
overlap)
seq_full <- rbind(seq_full,
record)
}
}
work <- rbind(work, seq_full)
}
